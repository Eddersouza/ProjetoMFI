@{
    ViewBag.Title = "Gerenciar Fornecedor";
    string clientId = ViewBag.ClientId ?? string.Empty;
    bool isAuthenticated = ViewBag.IsAuthenticated ?? false;
    string urlGoBack = isAuthenticated ? @Url.Action("Index", "Home", null) : @Url.Action("ChooseType", "User", null);
}


<br />
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading " ligth>
                <h3 class="panel-title">
                    <a class="btn btn-default" href="@urlGoBack">
                        <i class="fas fa-reply"></i>
                    </a>&nbsp; Fornecedor
                </h3>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <section>
        <div class="wizard">
            <div class="wizard-inner">
                <div class="connecting-line"></div>
                <ul class="nav nav-tabs" role="tablist">

                    <li role="presentation" class="active">
                        <a href="#tab-provider-data" data-toggle="tab" aria-controls="tab-provider-data" role="tab" title="Fornecedor">
                            <span class="round-tab">
                                <i class="fas fa-user-edit"></i>
                            </span>
                        </a>
                    </li>

                    <li role="presentation" class="">
                        <a href="#tab-provider-services" data-toggle="tab" aria-controls="tab-provider-services" role="tab" title="Serviços">
                            <span class="round-tab">
                                <i class="fas fa-tasks"></i>
                            </span>
                        </a>
                    </li>
                </ul>
            </div>

            <form role="form">
                <div class="tab-content">
                    <div class="tab-pane active" role="tabpanel" id="tab-provider-data">
                        <div class="col-md-12">
                            <ul class="list-inline pull-right">
                                <li>
                                    <button type="button" class="btn btn-primary next-step" title="Ir para gerenciamento de serviços.">
                                        <i class="fas fa-tasks">&nbsp;&nbsp;</i>
                                        Ir Para Serviços&nbsp;&nbsp;
                                        <i class="fas fa-arrow-right"></i>
                                    </button>
                                </li>
                            </ul>
                        </div>
                        <div id="provider-client-container"></div>
                    </div>
                    <div class="tab-pane" role="tabpanel" id="tab-provider-services">
                        <div class="col-md-12">
                            <ul class="list-inline pull-right">
                                <li>
                                    <button type="button" class="btn btn-default prev-step" title="Voltar para dados gerais do fornecedor.">
                                        <i class="fas fa-arrow-left">&nbsp;&nbsp;</i>
                                        Voltar para dados do Fornecedor&nbsp;&nbsp;
                                        <i class="fas fa-user-edit"></i>
                                    </button>
                                </li>
                            </ul>
                        </div>
                        <div id="provider-service-container"></div>

                    </div>
                    <div class="clearfix"></div>
                </div>
            </form>
        </div>
    </section>
</div>
<input id="urlLogin" type="hidden" value="@Url.Action("Login","User")" />
<input id="urlNewClientProvider" type="hidden" value="@Url.Action("Create","ClientProvider")" />
<input id="urlGetClientProviderService" type="hidden" value="@Url.Action("Services","ClientProvider", new { clientId ="/" })" />
<input id="urlGetDataClientProvider" type="hidden" value="@Url.Action("PartialClientProvider","ClientProvider", new { clientId ="/" })" />
<input id="urlManageProviderService" type="hidden" value="@Url.Action("ServiceManage","ClientProvider")" />

@section scripts{
    <script>
        let clientId = '@clientId';

        function applyMask() {
            $('.miniumAmountInput').mask('000.000.000,00', { reverse: true });
        }

        function btnManageService_onClick() {
            event.preventDefault();
            event.stopPropagation();

            let serviceId = $(this).data('service-id');
            let service = getObjectJSONFromForm('.service-provider-' + serviceId);
            service.active = $('#service-provide-check-' + serviceId).prop('checked');

            manageProviderService(service);
        }

        function changeStyleActivePanel(active, serviceId) {
            let panel = $('#service-provider-panel-' + serviceId);

            if (active) {
                panel.removeClass('panel-default')
                panel.addClass('panel-success')
            }
            else {
                panel.removeClass('panel-success')
                panel.addClass('panel-default')
            }
        }

         function checkBoxProviderService_onChange() {
            let element = $(this);
             let checked = element.prop('checked');

            event.preventDefault();
            event.stopPropagation();

            let serviceId = $(this).data('service-id')

             changeStyleActivePanel(checked, serviceId);
        }

         function getproviderData() {
            blockPage(true);
            let urlGetDataClientProvider = $("#urlGetDataClientProvider").val() + clientId;
            apiAjax('GET', 'HTML', 'text/HTML',
                {}, urlGetDataClientProvider,
                getproviderDataSuccess, dialogErrorShowMessages, resultApiComplete);
        }

        function getproviderServices() {
            blockPage(true);
            let urlGetClientProviderService = $("#urlGetClientProviderService").val() + clientId;
            apiAjax('GET', 'HTML', 'text/HTML',
                {}, urlGetClientProviderService,
                getproviderServicesSuccess, dialogErrorShowMessages, resultApiComplete);
        }

        function getproviderDataSuccess(data) {
            $("#provider-client-container").html(data);
        }

        function getproviderServicesSuccess(data) {
            $("#provider-service-container").html(data);
            applyMask();
            $("body").delegate('.btnManageService', 'click', btnManageService_onClick);
        }
        
        function manageProviderService(dados) {
            let urlManageProviderService = $('#urlManageProviderService').val();

            apiAjax('POST', 'json', 'application/json',
                dados, urlManageProviderService,
                null, manageProviderServiceError, resultApiComplete);
        }

        function manageProviderServiceError(jqXHR, textStatus, errorThrown) {
            let status = jqXHR.status;
            let messages = jqXHR.responseJSON.Warnings || [];

            if (status >= 400 && status < 500) {
                dialogWarningShowMessages(messages);
            }
            else {
                dialogErrorShowMessages(messages);
            }
        }

        function onProviderManageReady() {

            setTabFunctions();
            getproviderData();

            $("body").delegate('.service-provide-check', 'change', checkBoxProviderService_onChange);
        }

        function nextTab(elem) {
            $(elem).next().find('a[data-toggle="tab"]').click();
        }
        function prevTab(elem) {
            $(elem).prev().find('a[data-toggle="tab"]').click();
        }

        function setTabFunctions() {
            //Initialize tooltips
            $('.nav-tabs > li a[title]').tooltip();

            setTabFunctionShowTab();
            setTabFunctionNextStep();
            setTabFunctionPrevtStep();
        }

        function setTabFunctionNextStep() {
             $(".next-step").click(function (e) {

                var $active = $('.wizard .nav-tabs li.active');
                $active.next().removeClass('disabled');
                nextTab($active);

            });
        }

        function setTabFunctionPrevtStep() {
               $(".prev-step").click(function (e) {

                var $active = $('.wizard .nav-tabs li.active');
                prevTab($active);

            });
        }

        function setTabFunctionShowTab() {
              //Wizard
            $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {

                let $target = $(e.target);

                let tabName = $target[0].hash;

                if (tabName == "#tab-provider-services") {
                    getproviderServices();
                }

                if ($target.parent().hasClass('disabled')) {
                    return false;
                }
            });
        }

        $(document).ready(onProviderManageReady);
    </script>
}

